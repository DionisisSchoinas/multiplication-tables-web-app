
<style>
    .zoom {
        background: none;
        border: none;
        transition: transform .2s; /* Animation */
    }

        .zoom:hover {
            background: none;
            transform: scale(1.5);
        }

    .slider {
        overflow-y: hidden;
        max-height: 200px; /* approximate max height */

        transition-property: all;
        transition-duration: .5s;
        transition-timing-function: cubic-bezier(0, 1, 0.5, 1);
    }

        .slider.closed {
            max-height: 0;
        }

    .hint {
        position: absolute;
        right: 20px;
        bottom: 20px;
    }

    .hint-content {
        position: relative;
        border-radius: 20px;
        height: 200px;
        width: 250px;
    }

    .disabled {
        cursor: not-allowed;
    }

    #hint_button {
        position: absolute;
        right: 20px;
        bottom: 20px;
    }

    @@-webkit-keyframes bounce {
        0% {
            transform: scale(1,1) translate(0px, 0px);
        }

        30% {
            transform: scale(1,0.8) translate(0px, 10px);
        }

        75% {
            transform: scale(1,1.1) translate(0px, -25px);
        }

        100% {
            transform: scale(1,1) translate(0px, 0px);
        }
    }

    .bounce {
        margin: 0 auto;
        height: 20px;
        width: 150px;
        padding: 20px;
        -webkit-animation: bounce 1s infinite;
    }

        .bounce > img {
            cursor: pointer;
        }

    .btn-close {
        position: absolute;
        top: 10px;
        right: 5px;
        width: 1.1em;
        height: 1.1em;
        font-size: 25px;
        background-color: #ff0000;
        color: #ffffff;
        opacity: 1;
        filter: alpha(opacity=100);
        border: 0px;
        border-radius: 5px;
    }

        .btn-close:hover {
            background-color: #d10000;
            color: #ffffff;
            opacity: 1;
            filter: alpha(opacity=100);
        }

        .btn-close > div {
            transform-origin: center;
            transform: rotate(180deg);
        }

    .speech-bubble-text {
        position: absolute;
        left: 35px;
        top: 30px;
        height: 75px;
        width: 120px;
        font-size: 15px;
        overflow-y: auto;
        word-break: break-word;
        word-wrap: hyphenate;
    }
</style>

<div class="hint">
    <div class="zoom bounce" id="hint_button" width="100%">
        <img src="@Url.Content("~/Content/Images/magnifing_glass.png")" onclick="toggle()" width="50px">
    </div>
    <div class="hint-content slider closed" id="slider">
        <button type="button" class="btn-close" aria-label="Close" onclick="toggle()">
            <div aria-hidden="true">&times;</div>
        </button>
        <img src="@Url.Content("~/Content/Images/owl_image.png")" style="right:0px;top:0px;position:absolute;margin-top:100px" height="100">
        <img src="@Url.Content("~/Content/Images/speech_bubble.png")" style="left:0px;top:0px;position:absolute" height="150">
        <div class="speech-bubble-text">
            @{
                if (ViewBag.hint != null)
                {
                    string[] nameSplit = ViewBag.hint.Split(' ');
                    foreach (string word in nameSplit)
                    {
                        // Add hyphen after every letter except the last one
                        for (int j = 0; j < word.Length - 1; j++)
                        {
                            @Html.Raw(word[j]);
                            // If the character is a number don't add a hyphen
                            if (int.TryParse(word[j].ToString(), out _))
                            {
                                continue;
                            }
                            @Html.Raw("&shy;");
                        }
                        // Add the last character without a hyphen
                        @Html.Raw(word[word.Length - 1] + " ");
                    }
                }
                else
                {
                    Html.Raw("Δ&shy;ε&shy;ν έ&shy;χ&shy;ο&shy;υ&shy;μ&shy;ε κ&shy;ά&shy;τ&shy;ι γ&shy;ι&shy;α τ&shy;ώ&shy;ρ&shy;α");
                }
            }
        </div>
    </div>
</div>

<script>
    var toggled = true;
    function toggle() {
        if (toggled) {
            document.getElementById("slider").classList.remove("closed");
            document.getElementById("hint_button").style.visibility = 'hidden';
            toggled = false;
        }
        else {
            document.getElementById("slider").classList.add("closed");
            setTimeout(function () { document.getElementById("hint_button").style.visibility = 'visible'; }, 450);
            toggled = true;
        }
    }
</script>