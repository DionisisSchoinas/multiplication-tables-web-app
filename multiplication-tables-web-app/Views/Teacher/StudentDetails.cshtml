@model multiplication_tables_web_app.Models.Student
@{
    multiplication_tables_web_app.Models.Singleton.StudentData studentData = ViewBag.studentData;
    List<multiplication_tables_web_app.Models.TestName> testNames = ViewBag.testNames;
}

<style>
    .card {
        border: black solid 1px;
        border-radius: 5px;
        /* Used to balance width with the card-text */
        font-size: min(max(2vmax, 20px), 100px);
        width: 7em;
        min-width: 100px;
        min-height: 100px;
        float: left;
        margin: 1.5vmax;
        padding: 1vmax 0.4vmax 1vmax 0.4vmax;
        /* Transitions */
        background-color: white;
        box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);
        color: black;
        /* Text alignment */
        text-align: center;
    }

    .card-title {
        hyphens: manual;
        word-break: break-word;
        word-wrap: break-word;
        margin-top: 0px;
        font-size: min(max(2vmax, 5px), 30px);
    }

    .card-text {
        font-size: min(max(4vmax, 20px), 120px);
        font-weight: 900;
        text-align: center;
    }
</style>

@Html.Partial("../Shared/CircularProgressBarCSS");

<h1>Πληροφορίες Μαθητή</h1>
<br />
<div>
    @Html.DisplayNameFor(model => model.User.Name) : <b>@studentData.student.User.Name</b>
</div>
<br />

@if (studentData.grades == null)
{
    <b>Δεν υπάρχουν στατιστικά, δεν έχουν γίνει τεστ</b>
}
else
{
    <div class="card-deck">
        @for (int i = 0; i < studentData.grades.Length; i++)
        {
            <div class="card">
                <h3 class="card-title">
                    @{
                        string[] nameSplit = testNames[i].Name.Split(' ');
                        foreach (string word in nameSplit)
                        {
                            // Add hyphen after every letter except the last one
                            for (int j = 0; j < word.Length - 1; j++)
                            {
                                @Html.Raw(word[j]);
                                // If the character is a number don't add a hyphen
                                if (int.TryParse(word[j].ToString(), out _))
                                {
                                    continue;
                                }
                                @Html.Raw("&shy;");
                            }
                            // Add the last character without a hyphen
                            @Html.Raw(word[word.Length - 1] + " ");
                        }
                    }
                </h3>
                @{ 
                    string color;
                    if (studentData.grades[i] < 25)
                    {
                        color = "rgba(255, 0, 0, 1)";
                    }
                    else if (studentData.grades[i] < 50)
                    {
                        color = "rgba(255, 100, 0, 1)";
                    }
                    else if (studentData.grades[i] < 75)
                    {
                        color = "rgba(180, 230, 0, 1)";
                    }
                    else
                    {
                        color = "rgba(0, 255, 0, 1)";
                    }
                }
                <hr />
                <div class="card-text" style="color: @color;">
                    @{ 
                        string c = "progress-circle ";
                        c += studentData.grades[i] > 50 ? "over50 " : "";
                        c += "p" + studentData.grades[i];
                    }
                    <div class="@c" style="font-size: min(max(2vmax, 20px), 100px); margin: auto;">
                        <span style="color: @color;">@studentData.grades[i]%</span>
                        <div class="left-half-clipper">
                            <div class="first50-bar" style="background-color: @color;"></div>
                            <div class="value-bar" style="border-color: @color;"></div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
}